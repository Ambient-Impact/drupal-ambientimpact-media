diff --git a/core/misc/cspell/dictionary.txt b/core/misc/cspell/dictionary.txt
index bfb2d6424d..cff6e32a0b 100644
--- a/core/misc/cspell/dictionary.txt
+++ b/core/misc/cspell/dictionary.txt
@@ -511,6 +511,7 @@ hola
 hookname
 hosters
 hostnames
+hqdefault
 hrefs
 htkey
 htmlcorrector
@@ -663,6 +664,7 @@ maxage
 maxdepth
 maximumred
 maxlifetime
+maxresdefault
 maynot
 mbytes
 mdhash
diff --git a/core/modules/media/media.api.php b/core/modules/media/media.api.php
index 93244f58a8..fc3db0484a 100644
--- a/core/modules/media/media.api.php
+++ b/core/modules/media/media.api.php
@@ -20,6 +20,21 @@ function hook_media_source_info_alter(array &$sources) {
   $sources['youtube']['label'] = t('Youtube rocks!');
 }
 
+/**
+ * Alters the information provided by the oEmbed resource url.
+ *
+ * @param array $data
+ *   Data provided by the oEmbed resource.
+ * @param $url
+ *   The oEmbed resource URL.
+ */
+function hook_oembed_resource_data_alter(array &$data, $url) {
+  if (str_contains($url, 'youtube.com/oembed')) {
+    // Get the maximum resolution thumbnail from YouTube.
+    $data['thumbnail_url'] = str_replace('hqdefault', 'maxresdefault', $data['thumbnail_url']);
+  }
+}
+
 /**
  * Alters an oEmbed resource URL before it is fetched.
  *
diff --git a/core/modules/media/media.services.yml b/core/modules/media/media.services.yml
index 252a51dd08..28cfcff86d 100644
--- a/core/modules/media/media.services.yml
+++ b/core/modules/media/media.services.yml
@@ -10,7 +10,7 @@ services:
     arguments: ['@http_client', '@config.factory', '@datetime.time', '@keyvalue', '@logger.factory']
   media.oembed.resource_fetcher:
     class: Drupal\media\OEmbed\ResourceFetcher
-    arguments: ['@http_client', '@media.oembed.provider_repository', '@cache.default']
+    arguments: ['@http_client', '@media.oembed.provider_repository', '@cache.default', '@module_handler']
   media.oembed.iframe_url_helper:
     class: Drupal\media\IFrameUrlHelper
     arguments: ['@router.request_context', '@private_key']
diff --git a/core/modules/media/src/OEmbed/ResourceFetcher.php b/core/modules/media/src/OEmbed/ResourceFetcher.php
index 62b39499fe..026e9f5d8b 100644
--- a/core/modules/media/src/OEmbed/ResourceFetcher.php
+++ b/core/modules/media/src/OEmbed/ResourceFetcher.php
@@ -4,6 +4,7 @@
 
 use Drupal\Component\Serialization\Json;
 use Drupal\Core\Cache\CacheBackendInterface;
+use Drupal\Core\Extension\ModuleHandlerInterface;
 use GuzzleHttp\ClientInterface;
 use GuzzleHttp\Exception\TransferException;
 use GuzzleHttp\RequestOptions;
@@ -34,6 +35,13 @@ class ResourceFetcher implements ResourceFetcherInterface {
    */
   protected $cacheBackend;
 
+  /**
+   * The module handler service.
+   *
+   * @var \Drupal\Core\Extension\ModuleHandlerInterface
+   */
+  protected $moduleHandler;
+
   /**
    * Constructs a ResourceFetcher object.
    *
@@ -43,11 +51,18 @@ class ResourceFetcher implements ResourceFetcherInterface {
    *   The oEmbed provider repository service.
    * @param \Drupal\Core\Cache\CacheBackendInterface $cache_backend
    *   The cache backend.
+   * @param \Drupal\Core\Extension\ModuleHandlerInterface|null $module_handler
+   *   The module handler service.
    */
-  public function __construct(ClientInterface $http_client, ProviderRepositoryInterface $providers, CacheBackendInterface $cache_backend) {
+  public function __construct(ClientInterface $http_client, ProviderRepositoryInterface $providers, CacheBackendInterface $cache_backend, ModuleHandlerInterface $module_handler = NULL) {
     $this->httpClient = $http_client;
     $this->providers = $providers;
     $this->cacheBackend = $cache_backend;
+    if (empty($module_handler)) {
+      $module_handler = \Drupal::moduleHandler();
+      @trigger_error('Passing NULL as the $module_handler parameter to ' . __METHOD__ . '() is deprecated in drupal:10.1.0 and is removed from drupal:11.0.0. See https://www.drupal.org/node/3042423', E_USER_DEPRECATED);
+    }
+    $this->moduleHandler = $module_handler;
   }
 
   /**
@@ -88,6 +103,8 @@ public function fetchResource($url) {
       throw new ResourceException('The oEmbed resource could not be decoded.', $url);
     }
 
+    $this->moduleHandler->alter('oembed_resource_data', $data, $url);
+
     $this->cacheBackend->set($cache_id, $data);
 
     return $this->createResource($data, $url);
diff --git a/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module b/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
index 7ab7f12496..2c06d78b4e 100644
--- a/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
+++ b/core/modules/media/tests/modules/media_test_oembed/media_test_oembed.module
@@ -27,3 +27,13 @@ function media_test_oembed_oembed_resource_url_alter(array &$parsed_url, Provide
     $parsed_url['query']['altered'] = 1;
   }
 }
+
+/**
+ * Implements hook_oembed_resource_data_alter().
+ */
+function media_test_oembed_oembed_resource_data_alter(array &$data, $url) {
+  if (str_contains($url, 'twitter.com/oembed')) {
+    // Change the width property.
+    $data['width'] = 600;
+  }
+}
diff --git a/core/modules/media/tests/src/Functional/ResourceFetcherTest.php b/core/modules/media/tests/src/Functional/ResourceFetcherTest.php
index e1e20ff8d9..ea08b6f081 100644
--- a/core/modules/media/tests/src/Functional/ResourceFetcherTest.php
+++ b/core/modules/media/tests/src/Functional/ResourceFetcherTest.php
@@ -34,6 +34,7 @@ protected function setUp(): void {
    * Data provider for testFetchResource().
    *
    * @return array
+   *   Resources data provider.
    */
   public function providerFetchResource() {
     return [
@@ -74,4 +75,19 @@ public function testFetchResource($resource_url, $provider_name, $title) {
     $this->assertSame($title, $resource->getTitle());
   }
 
+  /**
+   * Tests that hook_oembed_resource_data_alter() is invoked.
+   */
+  public function testResourceDataAlter() {
+    $this->container->get('module_installer')->install(['media_test_oembed']);
+
+    // Get the resource.
+    $resource_url = $this->container->get('media.oembed.resource_fetcher')
+      ->fetchResource('https://publish.twitter.com/oembed?url=https://twitter.com/Dries/status/999985431595880448');
+
+    // Check media_test_oembed_oembed_resource_data_alter
+    // to see the hook implementation.
+    $this->assertEquals(600, $resource_url->getWidth());
+  }
+
 }
diff --git a/core/modules/media/tests/src/Unit/ResourceFetcherTest.php b/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
index 8cd96683c9..127dc5c120 100644
--- a/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
+++ b/core/modules/media/tests/src/Unit/ResourceFetcherTest.php
@@ -43,7 +43,8 @@ public function testFetchTimeout(): void {
     $fetcher = new ResourceFetcher(
       $client->reveal(),
       $this->createMock('\Drupal\media\OEmbed\ProviderRepositoryInterface'),
-      new NullBackend('default')
+      new NullBackend('default'),
+      $this->createMock('\Drupal\Core\Extension\ModuleHandlerInterface')
     );
     $fetcher->fetchResource($url);
   }
@@ -80,7 +81,12 @@ public function testUnknownContentTypeHeader(): void {
     ]);
     $providers = $this->createMock('\Drupal\media\OEmbed\ProviderRepositoryInterface');
 
-    $fetcher = new ResourceFetcher($client, $providers, new NullBackend('default'));
+    $fetcher = new ResourceFetcher(
+      $client,
+      $providers,
+      new NullBackend('default'),
+      $this->createMock('\Drupal\Core\Extension\ModuleHandlerInterface')
+    );
     /** @var \Drupal\media\OEmbed\Resource $resource */
     $resource = $fetcher->fetchResource('valid');
     // The resource should have been successfully decoded as JSON.
